{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  points: 10\n};\nconst incrementByAmount = cre(\"reward/increment\");\nexport const bonusSlice = createSlice({\n  name: \"bonus\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.points += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(incrementByAmount, state => {\n      if (action.payload >= 100) {\n        state.points += 1;\n      }\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment\n} = bonusSlice.actions;\nexport default bonusSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","points","incrementByAmount","cre","bonusSlice","name","reducers","increment","state","extraReducers","builder","addCase","action","payload","actions","reducer"],"sources":["C:/My/Redux/ReduxToolKit/src/slices/bonusSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  points: 10,\r\n};\r\nconst incrementByAmount = cre(\"reward/increment\");\r\nexport const bonusSlice = createSlice({\r\n  name: \"bonus\",\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.points += 1;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(incrementByAmount, (state) => {\r\n      if (action.payload >= 100) {\r\n        state.points += 1;\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment } = bonusSlice.actions;\r\n\r\nexport default bonusSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AACD,MAAMC,iBAAiB,GAAGC,GAAG,CAAC,kBAAkB,CAAC;AACjD,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EACpCM,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACP,MAAM,IAAI,CAAC;IACnB;EACF,CAAC;EACDQ,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACT,iBAAiB,EAAGM,KAAK,IAAK;MAC5C,IAAII,MAAM,CAACC,OAAO,IAAI,GAAG,EAAE;QACzBL,KAAK,CAACP,MAAM,IAAI,CAAC;MACnB;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEM;AAAU,CAAC,GAAGH,UAAU,CAACU,OAAO;AAE/C,eAAeV,UAAU,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}