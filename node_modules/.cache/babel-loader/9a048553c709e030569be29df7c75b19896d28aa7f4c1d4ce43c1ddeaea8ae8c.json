{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { incrementByAmount } from \"./accountSlice\";\nimport { act } from \"react-dom/test-utils\";\nconst initialState = {\n  points: 10\n};\nexport const bonusSlice = createSlice({\n  name: \"bonus\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.points += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(incrementByAmount, (state, actions) => {\n      if (action.payload >= 100) {}\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment\n} = bonusSlice.actions;\nexport default bonusSlice.reducer;","map":{"version":3,"names":["createSlice","incrementByAmount","act","initialState","points","bonusSlice","name","reducers","increment","state","extraReducers","builder","addCase","actions","action","payload","reducer"],"sources":["C:/My/Redux/ReduxToolKit/src/slices/bonusSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { incrementByAmount } from \"./accountSlice\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nconst initialState = {\r\n  points: 10,\r\n};\r\n\r\nexport const bonusSlice = createSlice({\r\n  name: \"bonus\",\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.points += 1;\r\n    },\r\n  },\r\n  extraReducers:(builder)=>{\r\n    builder.addCase(incrementByAmount,(state,actions)=>{\r\n      if(action.payload >= 100){\r\n        \r\n      }\r\n    })\r\n  }\r\n})\r\n\r\n;\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment } = bonusSlice.actions;\r\n\r\nexport default bonusSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,GAAG,QAAQ,sBAAsB;AAE1C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EACpCM,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACL,MAAM,IAAI,CAAC;IACnB;EACF,CAAC;EACDM,aAAa,EAAEC,OAAO,IAAG;IACvBA,OAAO,CAACC,OAAO,CAACX,iBAAiB,EAAC,CAACQ,KAAK,EAACI,OAAO,KAAG;MACjD,IAAGC,MAAM,CAACC,OAAO,IAAI,GAAG,EAAC,CAEzB;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAIF;AACA,OAAO,MAAM;EAAEP;AAAU,CAAC,GAAGH,UAAU,CAACQ,OAAO;AAE/C,eAAeR,UAAU,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}