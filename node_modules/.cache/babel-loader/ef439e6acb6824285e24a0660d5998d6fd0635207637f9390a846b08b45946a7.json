{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  points: 10\n};\nconst incrementByAmount = createAction(\"account/incrementByAmount\");\nexport const bonusSlice = createSlice({\n  name: \"bonus\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.points += 1;\n    }\n  },\n  extraReducers: (builder, action) => {\n    builder.addCase(incrementByAmount, (state, ac) => {\n      if (action.payload >= 100) {\n        state.points++;\n      }\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment\n} = bonusSlice.actions;\nexport default bonusSlice.reducer;","map":{"version":3,"names":["createAction","createSlice","initialState","points","incrementByAmount","bonusSlice","name","reducers","increment","state","extraReducers","builder","action","addCase","ac","payload","actions","reducer"],"sources":["C:/My/Redux/ReduxToolKit/src/slices/bonusSlice.js"],"sourcesContent":["import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  points: 10,\r\n};\r\nconst incrementByAmount = createAction(\"account/incrementByAmount\");\r\n\r\nexport const bonusSlice = createSlice({\r\n  name: \"bonus\",\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.points += 1;\r\n    },\r\n  },\r\n  extraReducers: (builder, action) => {\r\n    builder.addCase(incrementByAmount, (state,ac) => {\r\n      if (action.payload >= 100) {\r\n        state.points++;\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment } = bonusSlice.actions;\r\n\r\nexport default bonusSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAE5D,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AACD,MAAMC,iBAAiB,GAAGJ,YAAY,CAAC,2BAA2B,CAAC;AAEnE,OAAO,MAAMK,UAAU,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACN,MAAM,IAAI,CAAC;IACnB;EACF,CAAC;EACDO,aAAa,EAAEA,CAACC,OAAO,EAAEC,MAAM,KAAK;IAClCD,OAAO,CAACE,OAAO,CAACT,iBAAiB,EAAE,CAACK,KAAK,EAACK,EAAE,KAAK;MAC/C,IAAIF,MAAM,CAACG,OAAO,IAAI,GAAG,EAAE;QACzBN,KAAK,CAACN,MAAM,EAAE;MAChB;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEK;AAAU,CAAC,GAAGH,UAAU,CAACW,OAAO;AAE/C,eAAeX,UAAU,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}