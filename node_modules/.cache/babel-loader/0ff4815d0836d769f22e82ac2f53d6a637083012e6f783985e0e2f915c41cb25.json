{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { incrementByAmount } from \"./accountSlice\";\nconst initialState = {\n  points: 10\n};\nexport const bonusSlice = createSlice({\n  name: \"bonus\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.points += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(incrementByAmount);\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment\n} = bonusSlice.actions;\nexport default bonusSlice.reducer;","map":{"version":3,"names":["createSlice","incrementByAmount","initialState","points","bonusSlice","name","reducers","increment","state","extraReducers","builder","addCase","actions","reducer"],"sources":["C:/My/Redux/ReduxToolKit/src/slices/bonusSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { incrementByAmount } from \"./accountSlice\";\r\n\r\nconst initialState = {\r\n  points: 10,\r\n};\r\n\r\nexport const bonusSlice = createSlice({\r\n  name: \"bonus\",\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.points += 1;\r\n    },\r\n  },\r\n  extraReducers:(builder)=>{\r\n    builder.addCase(incrementByAmount)\r\n  }\r\n})\r\n\r\n;\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment } = bonusSlice.actions;\r\n\r\nexport default bonusSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,iBAAiB,QAAQ,gBAAgB;AAElD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACL,MAAM,IAAI,CAAC;IACnB;EACF,CAAC;EACDM,aAAa,EAAEC,OAAO,IAAG;IACvBA,OAAO,CAACC,OAAO,CAACV,iBAAiB,CAAC;EACpC;AACF,CAAC,CAAC;;AAIF;AACA,OAAO,MAAM;EAAEM;AAAU,CAAC,GAAGH,UAAU,CAACQ,OAAO;AAE/C,eAAeR,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}